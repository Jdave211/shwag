{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/davejaga/Desktop/Startups/shwag/website/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\ninterface CustomDropdownProps {\n  options: string[];\n  value: string;\n  onChange: (value: string) => void;\n}\n\nfunction CustomDropdown({ options, value, onChange }: CustomDropdownProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"relative\">\n      <button\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          setIsOpen(!isOpen);\n        }}\n        className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-500 bg-white text-gray-700 flex justify-between items-center\"\n      >\n        {value || 'Select Body Type'}\n        <svg className=\"fill-current h-4 w-4 ml-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"/></svg>\n      </button>\n      {isOpen && (\n        <div className=\"absolute mt-1 w-full bg-white border border-gray-300 rounded-lg shadow-lg z-10\">\n          {options.map((option: string) => (\n            <div\n              key={option}\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                onChange(option);\n                setIsOpen(false);\n              }}\n              className=\"p-3 hover:bg-gray-100 cursor-pointer\"\n            >\n              {option}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction RadioGroup({ \n  options, \n  value, \n  onChange, \n  name, \n  required = false \n}: { \n  options: {value: string, label: string, icon?: React.ReactNode}[], \n  value: string, \n  onChange: (value: string) => void, \n  name: string,\n  required?: boolean\n}) {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      {options.map((option) => (\n        <label \n          key={option.value} \n          className={`flex items-center gap-2 px-4 py-3 rounded-lg border-2 cursor-pointer transition-all\n            ${value === option.value \n              ? 'border-blue-500 bg-blue-50 text-blue-700 shadow-md transform -translate-y-1' \n              : 'border-gray-300 hover:border-gray-400 hover:bg-gray-50'}`}\n        >\n          <input\n            type=\"radio\"\n            name={name}\n            value={option.value}\n            checked={value === option.value}\n            onChange={() => onChange(option.value)}\n            className=\"sr-only\"\n            required={required && !value}\n          />\n          {option.icon}\n          <span>{option.label}</span>\n        </label>\n      ))}\n    </div>\n  );\n}\n\nexport default function Home() {\n  const [step, setStep] = useState(1);\n  const [avatarName, setAvatarName] = useState('');\n  const [frontImage, setFrontImage] = useState<string | null>(null);\n  const [sideImage, setSideImage] = useState<string | null>(null);\n  const [measurements, setMeasurements] = useState({\n    height: '',\n    weight: '',\n    chest: '',\n    waist: '',\n    hips: ''\n  });\n  const [result, setResult] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [bodyType, setBodyType] = useState('');\n  const [gender, setGender] = useState('');\n  \n  // Avatar generation state\n  const [showAvatarCreator, setShowAvatarCreator] = useState(false);\n  const [avatarUrl, setAvatarUrl] = useState('');\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>, type: 'front' | 'side') => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      if (type === 'front') {\n        setFrontImage(event.target?.result as string);\n      } else {\n        setSideImage(event.target?.result as string);\n      }\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleMeasurementChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setMeasurements(prev => ({ ...prev, [name]: value }));\n  };\n\n  const simulateAvatarCreation = () => {\n    setLoading(true);\n    // Simulate API call with a timeout\n    setTimeout(() => {\n      // Example avatar URL - in a real implementation, this would come from Ready Player Me\n      const dummyAvatarUrl = 'https://models.readyplayer.me/64859eccc301145f0fe1cf01.glb';\n      setAvatarUrl(dummyAvatarUrl);\n      setResult({\n        avatarUrl: dummyAvatarUrl,\n        avatarName,\n        gender,\n        bodyType,\n        measurements\n      });\n      setLoading(false);\n      setStep(3);\n    }, 2000);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!frontImage) {\n      setError('Front image is required');\n      return;\n    }\n\n    if (!measurements.height) {\n      setError('Height measurement is required');\n      return;\n    }\n\n    if (!bodyType) {\n      setError('Body type is required');\n      return;\n    }\n\n    // Show the avatar creator UI\n    setShowAvatarCreator(true);\n  };\n\n  const getProgressWidth = () => {\n    if (step === 1) return 'w-1/3';\n    if (step === 2 && !showAvatarCreator) return 'w-2/3';\n    if (step === 2 && showAvatarCreator) return 'w-3/4';\n    return 'w-full';\n  };\n\n  return (\n    <main className=\"flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-gray-50 to-gray-200 p-8\">\n      <div className=\"bg-white shadow-xl rounded-2xl max-w-2xl w-full p-8\">\n        {/* Progress bar */}\n        <div className=\"w-full bg-gray-200 rounded-full h-2 mb-8\">\n          <div className={`bg-blue-600 h-2 rounded-full transition-all duration-500 ${getProgressWidth()}`}></div>\n        </div>\n\n        <h1 className=\"text-4xl font-bold mb-8 text-center bg-gradient-to-r from-gray-800 via-blue-600 to-gray-800 text-transparent bg-clip-text\">Swag Avatar Generator</h1>\n        \n        {step === 1 && (\n          <form onSubmit={(e) => { \n            e.preventDefault(); \n            \n            // Validate required fields\n            if (!bodyType) {\n              setError('Body type is required');\n              return;\n            }\n            \n            if (!gender) {\n              setError('Gender is required');\n              return;\n            }\n            \n            setStep(2); \n            setError(null);\n          }} className=\"space-y-6\">\n            <div className=\"space-y-6\">\n              <div className=\"p-5 border-l-4 border-blue-500 bg-blue-50 rounded-lg\">\n                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Basic Information</h2>\n                <p className=\"text-sm text-gray-600\">Let's start by collecting some basic information about your avatar.</p>\n              </div>\n              \n              <div className=\"space-y-1\">\n                <label className=\"block text-sm font-medium mb-1 text-gray-700\">\n                  Avatar Name <span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  value={avatarName}\n                  onChange={(e) => setAvatarName(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  required\n                  placeholder=\"Enter a name for your avatar\"\n                />\n              </div>\n              \n              <div className=\"space-y-3\">\n                <label className=\"block text-sm font-medium text-gray-700\">\n                  Gender <span className=\"text-red-600\">*</span>\n                </label>\n                <RadioGroup\n                  name=\"gender\"\n                  options={[\n                    { \n                      value: 'male', \n                      label: 'Male',\n                      icon: (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                          <circle cx=\"10.5\" cy=\"6\" r=\"5\" />\n                          <path d=\"M20 21v-2a7 7 0 0 0-7-7h-5a7 7 0 0 0-7 7v2\" />\n                        </svg>\n                      )\n                    },\n                    { \n                      value: 'female', \n                      label: 'Female',\n                      icon: (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                          <circle cx=\"12\" cy=\"6\" r=\"5\" />\n                          <path d=\"M12 11v8M9 16h6\" />\n                        </svg>\n                      )\n                    }\n                  ]}\n                  value={gender}\n                  onChange={setGender}\n                  required={true}\n                />\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-1\">\n                  <label className=\"block text-sm font-medium mb-1 text-gray-700\">\n                    Height (cm) <span className=\"text-red-600\">*</span>\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"height\"\n                    value={measurements.height}\n                    onChange={handleMeasurementChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    required\n                    placeholder=\"Enter height\"\n                  />\n                </div>\n                <div className=\"space-y-1\">\n                  <label className=\"block text-sm font-medium mb-1 text-gray-700\">\n                    Body Type <span className=\"text-red-600\">*</span>\n                  </label>\n                  <CustomDropdown\n                    options={[\"Slim\", \"Average\", \"Athletic\", \"Curvy\", \"Muscular\"]}\n                    value={bodyType}\n                    onChange={setBodyType}\n                  />\n                </div>\n              </div>\n              \n              <div className=\"px-4 py-3 bg-gray-50 rounded-lg\">\n                <h3 className=\"text-md font-medium text-gray-700 mb-2\">Additional Measurements</h3>\n                <p className=\"text-sm text-gray-500 mb-3\">These measurements help create a more accurate avatar (optional)</p>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-1\">\n                    <label className=\"block text-sm font-medium mb-1 text-gray-700\">\n                      Weight (kg)\n                    </label>\n                    <input\n                      type=\"number\"\n                      name=\"weight\"\n                      value={measurements.weight}\n                      onChange={handleMeasurementChange}\n                      className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter weight\"\n                    />\n                  </div>\n                  <div className=\"space-y-1\">\n                    <label className=\"block text-sm font-medium mb-1 text-gray-700\">\n                      Chest (cm)\n                    </label>\n                    <input\n                      type=\"number\"\n                      name=\"chest\"\n                      value={measurements.chest}\n                      onChange={handleMeasurementChange}\n                      className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter chest size\"\n                    />\n                  </div>\n                  <div className=\"space-y-1\">\n                    <label className=\"block text-sm font-medium mb-1 text-gray-700\">\n                      Waist (cm)\n                    </label>\n                    <input\n                      type=\"number\"\n                      name=\"waist\"\n                      value={measurements.waist}\n                      onChange={handleMeasurementChange}\n                      className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter waist size\"\n                    />\n                  </div>\n                  <div className=\"space-y-1\">\n                    <label className=\"block text-sm font-medium mb-1 text-gray-700\">\n                      Hips (cm)\n                    </label>\n                    <input\n                      type=\"number\"\n                      name=\"hips\"\n                      value={measurements.hips}\n                      onChange={handleMeasurementChange}\n                      className=\"w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      placeholder=\"Enter hip size\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {error && (\n              <div className=\"p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg animate-pulse\">\n                {error}\n              </div>\n            )}\n            \n            <div className=\"flex justify-center\">\n              <button\n                type=\"submit\"\n                className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-300 transform hover:scale-105\"\n              >\n                Next Step\n              </button>\n            </div>\n          </form>\n        )}\n\n        {step === 2 && !showAvatarCreator && (\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"space-y-5\">\n              <div className=\"p-5 border-l-4 border-blue-500 bg-blue-50 rounded-lg\">\n                <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Upload Photos</h2>\n                <p className=\"text-sm text-gray-600\">Upload photos to help us create your personalized avatar.</p>\n              </div>\n              \n              <div className=\"p-6 border-2 border-dashed border-gray-300 rounded-lg hover:border-gray-400 transition-colors\">\n                <label className=\"block text-sm font-medium mb-2 text-gray-700\">\n                  Front View <span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={(e) => handleImageChange(e, 'front')}\n                  className=\"block w-full text-sm text-gray-700 border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n                {frontImage && (\n                  <div className=\"mt-3 w-32 h-32 relative\">\n                    <img \n                      src={frontImage} \n                      alt=\"Front view\" \n                      className=\"object-cover w-full h-full rounded-lg shadow-md\"\n                    />\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"p-6 border-2 border-dashed border-gray-300 rounded-lg hover:border-gray-400 transition-colors\">\n                <label className=\"block text-sm font-medium mb-2 text-gray-700\">\n                  Side View (Optional)\n                </label>\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={(e) => handleImageChange(e, 'side')}\n                  className=\"block w-full text-sm text-gray-700 border border-gray-300 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n                {sideImage && (\n                  <div className=\"mt-3 w-32 h-32 relative\">\n                    <img \n                      src={sideImage} \n                      alt=\"Side view\" \n                      className=\"object-cover w-full h-full rounded-lg shadow-md\"\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between\">\n              <button\n                type=\"button\"\n                onClick={() => setStep(1)}\n                className=\"px-5 py-2.5 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition duration-300 flex items-center gap-2\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                </svg>\n                Back\n              </button>\n              <button\n                type=\"submit\"\n                disabled={loading || !frontImage}\n                className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-300 disabled:bg-gray-400 disabled:cursor-not-allowed transform hover:scale-105 flex items-center gap-2\"\n              >\n                {loading ? (\n                  <>\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    Continue\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </>\n                )}\n              </button>\n            </div>\n            \n            {error && (\n              <div className=\"p-4 bg-red-100 border border-red-400 text-red-700 rounded-lg animate-pulse\">\n                {error}\n              </div>\n            )}\n          </form>\n        )}\n\n        {step === 2 && showAvatarCreator && (\n          <div className=\"space-y-6\">\n            <div className=\"p-5 border-l-4 border-blue-500 bg-blue-50 rounded-lg\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Customize Your Avatar</h2>\n              <p className=\"text-sm text-gray-600\">Based on your photos and measurements, customize your 3D avatar.</p>\n            </div>\n            \n            <div className=\"border-2 border-gray-200 rounded-lg p-8 bg-gray-50 text-center\">\n              <div className=\"mb-4\">\n                <div className=\"w-32 h-32 mx-auto bg-blue-100 rounded-full flex items-center justify-center mb-4 shadow-lg\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-16 h-16 text-blue-500\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-medium\">Ready Player Me Avatar Creator</h3>\n                <p className=\"text-gray-500 mt-2\">\n                  In a real implementation, the Ready Player Me avatar creator would appear here.\n                </p>\n              </div>\n              \n              <div className=\"mt-6 p-4 bg-white rounded-lg shadow-sm\">\n                <h4 className=\"text-sm font-semibold text-gray-700 mb-3 text-left\">Your Avatar Information</h4>\n                <div className=\"grid grid-cols-2 gap-y-2 text-left\">\n                  <div className=\"text-sm text-gray-500\">Name:</div>\n                  <div className=\"text-sm font-medium text-gray-900\">{avatarName}</div>\n                  \n                  <div className=\"text-sm text-gray-500\">Gender:</div>\n                  <div className=\"text-sm font-medium text-gray-900\">{gender === 'male' ? 'Male' : 'Female'}</div>\n                  \n                  <div className=\"text-sm text-gray-500\">Height:</div>\n                  <div className=\"text-sm font-medium text-gray-900\">{measurements.height} cm</div>\n                  \n                  <div className=\"text-sm text-gray-500\">Body Type:</div>\n                  <div className=\"text-sm font-medium text-gray-900\">{bodyType}</div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between\">\n              <button\n                type=\"button\"\n                onClick={() => setShowAvatarCreator(false)}\n                className=\"px-5 py-2.5 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition duration-300 flex items-center gap-2\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                </svg>\n                Back\n              </button>\n              <button\n                type=\"button\"\n                onClick={simulateAvatarCreation}\n                className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-300 transform hover:scale-105 flex items-center gap-2\"\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Creating Avatar...\n                  </>\n                ) : (\n                  <>\n                    Create My Avatar\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n\n        {step === 3 && result && (\n          <div className=\"mt-4 space-y-6\">\n            <div className=\"p-5 border-l-4 border-green-500 bg-green-50 rounded-lg\">\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Your 3D Avatar</h2>\n              <p className=\"text-sm text-gray-600\">Your custom avatar has been created successfully!</p>\n            </div>\n            \n            <div className=\"aspect-square w-full max-w-md mx-auto mb-6 bg-gradient-to-b from-blue-50 to-gray-50 rounded-lg overflow-hidden flex flex-col items-center justify-center p-4 shadow-lg\">\n              <div className=\"text-center\">\n                <div className=\"w-40 h-40 mx-auto bg-blue-100 rounded-full flex items-center justify-center mb-4 shadow-inner\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1} stroke=\"currentColor\" className=\"w-24 h-24 text-blue-500\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-medium text-gray-800\">{avatarName}'s 3D Avatar</h3>\n                <p className=\"text-gray-600 mt-2 mb-4\">\n                  In a real implementation, your 3D avatar would be displayed here.\n                </p>\n                <div className=\"p-3 bg-white rounded-lg text-left\">\n                  <p className=\"text-sm text-gray-500 mb-1\">Avatar URL:</p>\n                  <p className=\"font-mono text-xs text-gray-800 bg-gray-100 p-2 rounded overflow-x-auto\">\n                    {result.avatarUrl}\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white p-5 rounded-lg shadow-sm border border-gray-200\">\n              <h3 className=\"text-lg font-medium mb-3 text-gray-800\">Avatar Details</h3>\n              <div className=\"grid grid-cols-2 gap-x-4 gap-y-3\">\n                <div className=\"text-gray-500\">Name:</div>\n                <div className=\"font-medium text-gray-900\">{avatarName}</div>\n                \n                <div className=\"text-gray-500\">Gender:</div>\n                <div className=\"font-medium text-gray-900\">{gender === 'male' ? 'Male' : 'Female'}</div>\n                \n                <div className=\"text-gray-500\">Body Type:</div>\n                <div className=\"font-medium text-gray-900\">{bodyType || 'Not specified'}</div>\n                \n                <div className=\"text-gray-500\">Height:</div>\n                <div className=\"font-medium text-gray-900\">{measurements.height} cm</div>\n                \n                {measurements.weight && (\n                  <>\n                    <div className=\"text-gray-500\">Weight:</div>\n                    <div className=\"font-medium text-gray-900\">{measurements.weight} kg</div>\n                  </>\n                )}\n                \n                {measurements.chest && (\n                  <>\n                    <div className=\"text-gray-500\">Chest:</div>\n                    <div className=\"font-medium text-gray-900\">{measurements.chest} cm</div>\n                  </>\n                )}\n                \n                {measurements.waist && (\n                  <>\n                    <div className=\"text-gray-500\">Waist:</div>\n                    <div className=\"font-medium text-gray-900\">{measurements.waist} cm</div>\n                  </>\n                )}\n                \n                {measurements.hips && (\n                  <>\n                    <div className=\"text-gray-500\">Hips:</div>\n                    <div className=\"font-medium text-gray-900\">{measurements.hips} cm</div>\n                  </>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"flex justify-center mt-8\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setStep(1);\n                  setAvatarName('');\n                  setFrontImage(null);\n                  setSideImage(null);\n                  setMeasurements({ height: '', weight: '', chest: '', waist: '', hips: '' });\n                  setBodyType('');\n                  setGender('');\n                  setResult(null);\n                  setError(null);\n                  setAvatarUrl('');\n                  setShowAvatarCreator(false);\n                }}\n                className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-300 transform hover:scale-105 flex items-center gap-2\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n                </svg>\n                Create Another Avatar\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}